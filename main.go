package main

import (
	"fmt"
	"math"
)

/*
Завдання про Шлях Кулака. На сивих схилах Гімалаїв стоять два древніх
буддистських монастиря: Гуань-Інь і Гуань-Янь. Щороку в день зішестя
на землю боддісатви Араватті ченці обох монастирів збираються на спільне
свято і показують своє вдосконалення на Шляху Кулака. Всіх тих, що змагаються
ченців розбивають на пари, переможці пар б'ються потім між собою і так далі,
до фінального поєдинку. Монастир, ченці якого перемогли у фінальному бою,
забирає собі на зберігання статую боддісатви. Реалізувати багатопоточний додаток,
що визначає переможця. В якості вхідних даних використовується масив,
в якому зберігається кількість енергії Ци кожного ченця. При вирішенні
використовувати принцип дихотомії.
*/

func sum(s int, m int, c chan int) {
	c <- int(math.Max(float64(s), float64(m))) // send max to c
}

func main() {
	s := []int{7, 2, 8, 9, 4, 0, 4, 3, 8, 6}

	mass := []int{2, 7, 2, 6, 2, 6, 2, 6, 2, 6}

	c := make(chan int)

	var n = 10
	var count = 0
	for i := 0; i < n; i++ {
		go sum(s[i], mass[i], c)
		t := <-c
		if t == s[i] {
			count++
		}
		if t == mass[i] {
			count--
		}
		fmt.Println("i : ", i, " vin = ", t)
	}
	if count > 0 {
		fmt.Println("CLan 1 vin")
	}
	if count < 0 {
		fmt.Println("CLan 2 vin")
	}
	if count == 0 {
		fmt.Println("CLans are same")
	}

}
